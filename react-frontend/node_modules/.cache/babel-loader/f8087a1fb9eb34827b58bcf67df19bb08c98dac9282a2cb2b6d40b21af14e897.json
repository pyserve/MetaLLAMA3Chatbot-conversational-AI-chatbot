{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weaver 15\\\\Documents\\\\Software_Tools\\\\MetaLLAMA3Chatbot-conversational-AI-chatbot\\\\react-frontend\\\\src\\\\contexts\\\\chatContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nconst generateSessionId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nconst ChatContextProvider = ({\n  children\n}) => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [sessionId, setSessionId] = useState(() => sessionStorage.getItem('sessionId') || null);\n  useEffect(() => {\n    if (!sessionId) {\n      const newSessionId = generateSessionId();\n      sessionStorage.setItem('sessionId', newSessionId);\n      setSessionId(newSessionId);\n    }\n  }, [sessionId]);\n  const createNewSessionId = () => {\n    const newSessionId = generateSessionId();\n    sessionStorage.setItem('sessionId', newSessionId);\n    setSessionId(newSessionId);\n    setChats([]);\n    return newSessionId;\n  };\n  const changeSessionId = newSessionId => {\n    sessionStorage.setItem('sessionId', newSessionId);\n    setSessionId(newSessionId);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      chats,\n      setChats,\n      sessionId,\n      createNewSessionId,\n      changeSessionId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatContextProvider, \"xxkYeV3oGhv4xWkhr79Eaya8q54=\");\n_c = ChatContextProvider;\nexport default ChatContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","ChatContext","generateSessionId","replace","c","r","Math","random","v","toString","ChatContextProvider","children","_s","chats","setChats","sessionId","setSessionId","sessionStorage","getItem","newSessionId","setItem","createNewSessionId","changeSessionId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Weaver 15/Documents/Software_Tools/MetaLLAMA3Chatbot-conversational-AI-chatbot/react-frontend/src/contexts/chatContext.js"],"sourcesContent":["\r\nimport { createContext, useEffect, useState } from 'react';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst generateSessionId = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0,\r\n            v = (c === 'x') ? r : ((r & 0x3) | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\nconst ChatContextProvider = ({children}) => {\r\n    const [chats, setChats] = useState([]);\r\n    const [sessionId, setSessionId] = useState(() => sessionStorage.getItem('sessionId') || null);\r\n\r\n    useEffect(() => {\r\n        if (!sessionId) {\r\n            const newSessionId = generateSessionId();\r\n            sessionStorage.setItem('sessionId', newSessionId);\r\n            setSessionId(newSessionId);\r\n        }\r\n    }, [sessionId]);\r\n\r\n    const createNewSessionId = () => {\r\n        const newSessionId = generateSessionId();\r\n        sessionStorage.setItem('sessionId', newSessionId);\r\n        setSessionId(newSessionId);\r\n        setChats([]);\r\n        return newSessionId;\r\n    };\r\n\r\n    const changeSessionId = (newSessionId) => {\r\n        sessionStorage.setItem('sessionId', newSessionId);\r\n        setSessionId(newSessionId);\r\n    }\r\n\r\n    return(\r\n        <ChatContext.Provider value={{ chats, setChats, sessionId, createNewSessionId, changeSessionId }}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ChatContextProvider;"],"mappings":";;AACA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,OAAO,sCAAsC,CAACC,OAAO,CAAC,OAAO,EAAE,UAASC,CAAC,EAAE;IACvE,IAAIC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MAC1BC,CAAC,GAAIJ,CAAC,KAAK,GAAG,GAAIC,CAAC,GAAKA,CAAC,GAAG,GAAG,GAAI,GAAI;IAC3C,OAAOG,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;EACzB,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,mBAAmB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,MAAMmB,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;EAE7FrB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACkB,SAAS,EAAE;MACZ,MAAMI,YAAY,GAAGjB,iBAAiB,CAAC,CAAC;MACxCe,cAAc,CAACG,OAAO,CAAC,WAAW,EAAED,YAAY,CAAC;MACjDH,YAAY,CAACG,YAAY,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMF,YAAY,GAAGjB,iBAAiB,CAAC,CAAC;IACxCe,cAAc,CAACG,OAAO,CAAC,WAAW,EAAED,YAAY,CAAC;IACjDH,YAAY,CAACG,YAAY,CAAC;IAC1BL,QAAQ,CAAC,EAAE,CAAC;IACZ,OAAOK,YAAY;EACvB,CAAC;EAED,MAAMG,eAAe,GAAIH,YAAY,IAAK;IACtCF,cAAc,CAACG,OAAO,CAAC,WAAW,EAAED,YAAY,CAAC;IACjDH,YAAY,CAACG,YAAY,CAAC;EAC9B,CAAC;EAED,oBACInB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEC,QAAQ;MAAEC,SAAS;MAAEM,kBAAkB;MAAEC;IAAgB,CAAE;IAAAX,QAAA,EAC5FA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAhB,EAAA,CA9BKF,mBAAmB;AAAAmB,EAAA,GAAnBnB,mBAAmB;AAgCzB,eAAeA,mBAAmB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}